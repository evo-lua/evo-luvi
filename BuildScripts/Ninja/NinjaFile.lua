local ipairs = ipairs
local table_concat = table.concat
local table_remove = table.remove

local DEFAULT_REQUIRED_VERSION = "1.11"
local DEFAULT_BUILD_DIRECTORY_NAME = "ninjabuild"

local NinjaFile = {
	requiredVersion = DEFAULT_REQUIRED_VERSION,
	buildDirectory = DEFAULT_BUILD_DIRECTORY_NAME,
	-- Untested (NYI)
	ruleDeclarations = {},
	buildEdges = {},
	variables = {},
	defaultTargets = {},
	subninjas = {},
	includes = {},
	pool = {},
}

NinjaFile.DEFAULT_REQUIRED_VERSION = DEFAULT_REQUIRED_VERSION
NinjaFile.DEFAULT_BUILD_DIRECTORY_NAME = DEFAULT_BUILD_DIRECTORY_NAME
NinjaFile.AUTOGENERATION_HEADER_TEXT = "# Automatically generated by evo-ninja (editing this file is pointless)"

function NinjaFile:Construct()
	local instance = {}

	instance.__index = self
	setmetatable(instance, instance)

	return instance
end

function NinjaFile:Save(filePath)
	local fileContents = self:ToString()
	C_FileSystem.WriteFile(filePath, fileContents .. "\n")
end

function NinjaFile:ToString()
	local fileContents = {}

	fileContents[#fileContents+1] = NinjaFile.AUTOGENERATION_HEADER_TEXT
	fileContents[#fileContents+1] = "ninja_required_version = " .. self.requiredVersion

	for index, variable in ipairs(self.variables) do
		fileContents[#fileContents+1] = variable.name .. " = " .. variable.declarationLine
	end

	for index, ruleInfo in ipairs(self.ruleDeclarations) do
		local ruleName = ruleInfo.name
		fileContents[#fileContents+1] = "rule " .. ruleName

		-- Use indices instead of key-value pairs here to make the output deterministic (and therefore testable)
		for _, lineInfo in ipairs(ruleInfo) do
			local fieldName = lineInfo.name
			local ruleString = table_concat(lineInfo, " ")
			fileContents[#fileContents+1] = "  " .. fieldName .. " = " .. ruleString
		end
	end

	for index, buildEdge in ipairs(self.buildEdges) do
		print(index, buildEdge)
		fileContents[#fileContents+1] = "build " .. buildEdge.target ..": " .. table_concat(buildEdge.statementTokens, " ")
		for _, variable in ipairs(buildEdge.variableOverrides) do
			fileContents[#fileContents+1] = "  " .. variable.name .. " = " .. variable.declarationLine
		end
	end

	return table_concat(fileContents, "\n")
end

NinjaFile.__call = NinjaFile.Construct
NinjaFile.__tostring = NinjaFile.ToString
setmetatable(NinjaFile, NinjaFile)

return NinjaFile